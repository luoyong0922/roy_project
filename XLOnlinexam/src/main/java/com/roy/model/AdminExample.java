package com.roy.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class AdminExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_admin
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_admin
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_admin
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_admin
     *
     * @mbg.generated
     */
    public AdminExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_admin
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_admin
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_admin
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_admin
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_admin
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_admin
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_admin
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_admin
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_admin
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_admin
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_admin
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andAdminNameIsNull() {
            addCriterion("admin_name is null");
            return (Criteria) this;
        }

        public Criteria andAdminNameIsNotNull() {
            addCriterion("admin_name is not null");
            return (Criteria) this;
        }

        public Criteria andAdminNameEqualTo(String value) {
            addCriterion("admin_name =", value, "adminName");
            return (Criteria) this;
        }

        public Criteria andAdminNameNotEqualTo(String value) {
            addCriterion("admin_name <>", value, "adminName");
            return (Criteria) this;
        }

        public Criteria andAdminNameGreaterThan(String value) {
            addCriterion("admin_name >", value, "adminName");
            return (Criteria) this;
        }

        public Criteria andAdminNameGreaterThanOrEqualTo(String value) {
            addCriterion("admin_name >=", value, "adminName");
            return (Criteria) this;
        }

        public Criteria andAdminNameLessThan(String value) {
            addCriterion("admin_name <", value, "adminName");
            return (Criteria) this;
        }

        public Criteria andAdminNameLessThanOrEqualTo(String value) {
            addCriterion("admin_name <=", value, "adminName");
            return (Criteria) this;
        }

        public Criteria andAdminNameLike(String value) {
            addCriterion("admin_name like", value, "adminName");
            return (Criteria) this;
        }

        public Criteria andAdminNameNotLike(String value) {
            addCriterion("admin_name not like", value, "adminName");
            return (Criteria) this;
        }

        public Criteria andAdminNameIn(List<String> values) {
            addCriterion("admin_name in", values, "adminName");
            return (Criteria) this;
        }

        public Criteria andAdminNameNotIn(List<String> values) {
            addCriterion("admin_name not in", values, "adminName");
            return (Criteria) this;
        }

        public Criteria andAdminNameBetween(String value1, String value2) {
            addCriterion("admin_name between", value1, value2, "adminName");
            return (Criteria) this;
        }

        public Criteria andAdminNameNotBetween(String value1, String value2) {
            addCriterion("admin_name not between", value1, value2, "adminName");
            return (Criteria) this;
        }

        public Criteria andAdminGenderIsNull() {
            addCriterion("admin_gender is null");
            return (Criteria) this;
        }

        public Criteria andAdminGenderIsNotNull() {
            addCriterion("admin_gender is not null");
            return (Criteria) this;
        }

        public Criteria andAdminGenderEqualTo(String value) {
            addCriterion("admin_gender =", value, "adminGender");
            return (Criteria) this;
        }

        public Criteria andAdminGenderNotEqualTo(String value) {
            addCriterion("admin_gender <>", value, "adminGender");
            return (Criteria) this;
        }

        public Criteria andAdminGenderGreaterThan(String value) {
            addCriterion("admin_gender >", value, "adminGender");
            return (Criteria) this;
        }

        public Criteria andAdminGenderGreaterThanOrEqualTo(String value) {
            addCriterion("admin_gender >=", value, "adminGender");
            return (Criteria) this;
        }

        public Criteria andAdminGenderLessThan(String value) {
            addCriterion("admin_gender <", value, "adminGender");
            return (Criteria) this;
        }

        public Criteria andAdminGenderLessThanOrEqualTo(String value) {
            addCriterion("admin_gender <=", value, "adminGender");
            return (Criteria) this;
        }

        public Criteria andAdminGenderLike(String value) {
            addCriterion("admin_gender like", value, "adminGender");
            return (Criteria) this;
        }

        public Criteria andAdminGenderNotLike(String value) {
            addCriterion("admin_gender not like", value, "adminGender");
            return (Criteria) this;
        }

        public Criteria andAdminGenderIn(List<String> values) {
            addCriterion("admin_gender in", values, "adminGender");
            return (Criteria) this;
        }

        public Criteria andAdminGenderNotIn(List<String> values) {
            addCriterion("admin_gender not in", values, "adminGender");
            return (Criteria) this;
        }

        public Criteria andAdminGenderBetween(String value1, String value2) {
            addCriterion("admin_gender between", value1, value2, "adminGender");
            return (Criteria) this;
        }

        public Criteria andAdminGenderNotBetween(String value1, String value2) {
            addCriterion("admin_gender not between", value1, value2, "adminGender");
            return (Criteria) this;
        }

        public Criteria andAdminBirthIsNull() {
            addCriterion("admin_birth is null");
            return (Criteria) this;
        }

        public Criteria andAdminBirthIsNotNull() {
            addCriterion("admin_birth is not null");
            return (Criteria) this;
        }

        public Criteria andAdminBirthEqualTo(Date value) {
            addCriterionForJDBCDate("admin_birth =", value, "adminBirth");
            return (Criteria) this;
        }

        public Criteria andAdminBirthNotEqualTo(Date value) {
            addCriterionForJDBCDate("admin_birth <>", value, "adminBirth");
            return (Criteria) this;
        }

        public Criteria andAdminBirthGreaterThan(Date value) {
            addCriterionForJDBCDate("admin_birth >", value, "adminBirth");
            return (Criteria) this;
        }

        public Criteria andAdminBirthGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("admin_birth >=", value, "adminBirth");
            return (Criteria) this;
        }

        public Criteria andAdminBirthLessThan(Date value) {
            addCriterionForJDBCDate("admin_birth <", value, "adminBirth");
            return (Criteria) this;
        }

        public Criteria andAdminBirthLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("admin_birth <=", value, "adminBirth");
            return (Criteria) this;
        }

        public Criteria andAdminBirthIn(List<Date> values) {
            addCriterionForJDBCDate("admin_birth in", values, "adminBirth");
            return (Criteria) this;
        }

        public Criteria andAdminBirthNotIn(List<Date> values) {
            addCriterionForJDBCDate("admin_birth not in", values, "adminBirth");
            return (Criteria) this;
        }

        public Criteria andAdminBirthBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("admin_birth between", value1, value2, "adminBirth");
            return (Criteria) this;
        }

        public Criteria andAdminBirthNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("admin_birth not between", value1, value2, "adminBirth");
            return (Criteria) this;
        }

        public Criteria andAdminPhoneIsNull() {
            addCriterion("admin_phone is null");
            return (Criteria) this;
        }

        public Criteria andAdminPhoneIsNotNull() {
            addCriterion("admin_phone is not null");
            return (Criteria) this;
        }

        public Criteria andAdminPhoneEqualTo(String value) {
            addCriterion("admin_phone =", value, "adminPhone");
            return (Criteria) this;
        }

        public Criteria andAdminPhoneNotEqualTo(String value) {
            addCriterion("admin_phone <>", value, "adminPhone");
            return (Criteria) this;
        }

        public Criteria andAdminPhoneGreaterThan(String value) {
            addCriterion("admin_phone >", value, "adminPhone");
            return (Criteria) this;
        }

        public Criteria andAdminPhoneGreaterThanOrEqualTo(String value) {
            addCriterion("admin_phone >=", value, "adminPhone");
            return (Criteria) this;
        }

        public Criteria andAdminPhoneLessThan(String value) {
            addCriterion("admin_phone <", value, "adminPhone");
            return (Criteria) this;
        }

        public Criteria andAdminPhoneLessThanOrEqualTo(String value) {
            addCriterion("admin_phone <=", value, "adminPhone");
            return (Criteria) this;
        }

        public Criteria andAdminPhoneLike(String value) {
            addCriterion("admin_phone like", value, "adminPhone");
            return (Criteria) this;
        }

        public Criteria andAdminPhoneNotLike(String value) {
            addCriterion("admin_phone not like", value, "adminPhone");
            return (Criteria) this;
        }

        public Criteria andAdminPhoneIn(List<String> values) {
            addCriterion("admin_phone in", values, "adminPhone");
            return (Criteria) this;
        }

        public Criteria andAdminPhoneNotIn(List<String> values) {
            addCriterion("admin_phone not in", values, "adminPhone");
            return (Criteria) this;
        }

        public Criteria andAdminPhoneBetween(String value1, String value2) {
            addCriterion("admin_phone between", value1, value2, "adminPhone");
            return (Criteria) this;
        }

        public Criteria andAdminPhoneNotBetween(String value1, String value2) {
            addCriterion("admin_phone not between", value1, value2, "adminPhone");
            return (Criteria) this;
        }

        public Criteria andAdminQuestionIsNull() {
            addCriterion("admin_question is null");
            return (Criteria) this;
        }

        public Criteria andAdminQuestionIsNotNull() {
            addCriterion("admin_question is not null");
            return (Criteria) this;
        }

        public Criteria andAdminQuestionEqualTo(String value) {
            addCriterion("admin_question =", value, "adminQuestion");
            return (Criteria) this;
        }

        public Criteria andAdminQuestionNotEqualTo(String value) {
            addCriterion("admin_question <>", value, "adminQuestion");
            return (Criteria) this;
        }

        public Criteria andAdminQuestionGreaterThan(String value) {
            addCriterion("admin_question >", value, "adminQuestion");
            return (Criteria) this;
        }

        public Criteria andAdminQuestionGreaterThanOrEqualTo(String value) {
            addCriterion("admin_question >=", value, "adminQuestion");
            return (Criteria) this;
        }

        public Criteria andAdminQuestionLessThan(String value) {
            addCriterion("admin_question <", value, "adminQuestion");
            return (Criteria) this;
        }

        public Criteria andAdminQuestionLessThanOrEqualTo(String value) {
            addCriterion("admin_question <=", value, "adminQuestion");
            return (Criteria) this;
        }

        public Criteria andAdminQuestionLike(String value) {
            addCriterion("admin_question like", value, "adminQuestion");
            return (Criteria) this;
        }

        public Criteria andAdminQuestionNotLike(String value) {
            addCriterion("admin_question not like", value, "adminQuestion");
            return (Criteria) this;
        }

        public Criteria andAdminQuestionIn(List<String> values) {
            addCriterion("admin_question in", values, "adminQuestion");
            return (Criteria) this;
        }

        public Criteria andAdminQuestionNotIn(List<String> values) {
            addCriterion("admin_question not in", values, "adminQuestion");
            return (Criteria) this;
        }

        public Criteria andAdminQuestionBetween(String value1, String value2) {
            addCriterion("admin_question between", value1, value2, "adminQuestion");
            return (Criteria) this;
        }

        public Criteria andAdminQuestionNotBetween(String value1, String value2) {
            addCriterion("admin_question not between", value1, value2, "adminQuestion");
            return (Criteria) this;
        }

        public Criteria andAdminKeyIsNull() {
            addCriterion("admin_key is null");
            return (Criteria) this;
        }

        public Criteria andAdminKeyIsNotNull() {
            addCriterion("admin_key is not null");
            return (Criteria) this;
        }

        public Criteria andAdminKeyEqualTo(String value) {
            addCriterion("admin_key =", value, "adminKey");
            return (Criteria) this;
        }

        public Criteria andAdminKeyNotEqualTo(String value) {
            addCriterion("admin_key <>", value, "adminKey");
            return (Criteria) this;
        }

        public Criteria andAdminKeyGreaterThan(String value) {
            addCriterion("admin_key >", value, "adminKey");
            return (Criteria) this;
        }

        public Criteria andAdminKeyGreaterThanOrEqualTo(String value) {
            addCriterion("admin_key >=", value, "adminKey");
            return (Criteria) this;
        }

        public Criteria andAdminKeyLessThan(String value) {
            addCriterion("admin_key <", value, "adminKey");
            return (Criteria) this;
        }

        public Criteria andAdminKeyLessThanOrEqualTo(String value) {
            addCriterion("admin_key <=", value, "adminKey");
            return (Criteria) this;
        }

        public Criteria andAdminKeyLike(String value) {
            addCriterion("admin_key like", value, "adminKey");
            return (Criteria) this;
        }

        public Criteria andAdminKeyNotLike(String value) {
            addCriterion("admin_key not like", value, "adminKey");
            return (Criteria) this;
        }

        public Criteria andAdminKeyIn(List<String> values) {
            addCriterion("admin_key in", values, "adminKey");
            return (Criteria) this;
        }

        public Criteria andAdminKeyNotIn(List<String> values) {
            addCriterion("admin_key not in", values, "adminKey");
            return (Criteria) this;
        }

        public Criteria andAdminKeyBetween(String value1, String value2) {
            addCriterion("admin_key between", value1, value2, "adminKey");
            return (Criteria) this;
        }

        public Criteria andAdminKeyNotBetween(String value1, String value2) {
            addCriterion("admin_key not between", value1, value2, "adminKey");
            return (Criteria) this;
        }

        public Criteria andAdminPasswordIsNull() {
            addCriterion("admin_password is null");
            return (Criteria) this;
        }

        public Criteria andAdminPasswordIsNotNull() {
            addCriterion("admin_password is not null");
            return (Criteria) this;
        }

        public Criteria andAdminPasswordEqualTo(String value) {
            addCriterion("admin_password =", value, "adminPassword");
            return (Criteria) this;
        }

        public Criteria andAdminPasswordNotEqualTo(String value) {
            addCriterion("admin_password <>", value, "adminPassword");
            return (Criteria) this;
        }

        public Criteria andAdminPasswordGreaterThan(String value) {
            addCriterion("admin_password >", value, "adminPassword");
            return (Criteria) this;
        }

        public Criteria andAdminPasswordGreaterThanOrEqualTo(String value) {
            addCriterion("admin_password >=", value, "adminPassword");
            return (Criteria) this;
        }

        public Criteria andAdminPasswordLessThan(String value) {
            addCriterion("admin_password <", value, "adminPassword");
            return (Criteria) this;
        }

        public Criteria andAdminPasswordLessThanOrEqualTo(String value) {
            addCriterion("admin_password <=", value, "adminPassword");
            return (Criteria) this;
        }

        public Criteria andAdminPasswordLike(String value) {
            addCriterion("admin_password like", value, "adminPassword");
            return (Criteria) this;
        }

        public Criteria andAdminPasswordNotLike(String value) {
            addCriterion("admin_password not like", value, "adminPassword");
            return (Criteria) this;
        }

        public Criteria andAdminPasswordIn(List<String> values) {
            addCriterion("admin_password in", values, "adminPassword");
            return (Criteria) this;
        }

        public Criteria andAdminPasswordNotIn(List<String> values) {
            addCriterion("admin_password not in", values, "adminPassword");
            return (Criteria) this;
        }

        public Criteria andAdminPasswordBetween(String value1, String value2) {
            addCriterion("admin_password between", value1, value2, "adminPassword");
            return (Criteria) this;
        }

        public Criteria andAdminPasswordNotBetween(String value1, String value2) {
            addCriterion("admin_password not between", value1, value2, "adminPassword");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_admin
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_admin
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}