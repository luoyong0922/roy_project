<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="600 seconds" debug="false">
    <!--scan:当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。-->
    <!--scanPeriod:设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。
    默认的时间间隔为1分钟。-->
    <!--debug:当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。-->

    <!-- 日志目录 -->
    <property name="logDir" value="logs/"/>

    <!-- 默认的控制台日志输出，开发环境使用 -->
    <appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
        <!--<Encoding>UTF-8</Encoding>-->
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>%date [%thread] %-5level %logger{50}:%L - %msg%n</pattern>
        </layout>
    </appender>

    <!-- 配置文件轮转 -->
    <appender name="logfile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--<Encoding>UTF-8</Encoding>-->
        <File>${logDir}/SpringBootAppLog.log</File>
        <!--滚动策略，按照时间滚动 TimeBasedRollingPolicy-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--文件路径,定义了日志的切分方式——把每一天的日志归档到一个文件中,以防止日志填满整个磁盘空间-->
            <FileNamePattern>${logDir}/history/SpringBootAppLog.%d{yyyyMMdd}.log</FileNamePattern>
            <!--只保留最近30天的日志-->
            <maxHistory>30</maxHistory>
            <!--用来指定日志文件的上限大小，那么到了这个值，就会删除旧的日志-->
            <!--<totalSizeCap>1GB</totalSizeCap>-->
        </rollingPolicy>
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>%date [%thread] %-5level %logger{50}:%L - %msg%n</pattern>
        </layout>
    </appender>

    <!-- 修改其他包的日志输出级别,
         additivity属性为false，表示此loger的打印信息不再向上级传递
         additivity属性为true，同一条日志将会输出多条
     -->
    <logger name="com.roy" level="DEBUG" additivity="false">
        <appender-ref ref="stdout"/>
        <appender-ref ref="logfile"/>
    </logger>

    <!-- root 默认日志配置 ，注意这里的级别，生产环境不要用DEBUG，你的磁盘会扛不住的！-->
    <root level="INFO">
        <appender-ref ref="stdout"/>
        <appender-ref ref="logfile"/>
    </root>
</configuration>